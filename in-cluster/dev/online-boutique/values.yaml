applications:
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoloadgenerator:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.3
    name: microservices-demo-loadgenerator
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgBm7eLC9W5pAbekMFpiOaF0wlVn+JjV0/Ix55Yq8FxJqv4kcZ/9Re3V6DgWC7ZkEtWaM+h0eHip2GEqj/grZr3RtLq402T5LsNX9vhxZIv1symT4rGySKLhrTU4Fy5rRrPwlfGwwq97s0scNCbLtU5sw+ct2QuBqBjg5Aow4sGN05FWRZ91Vtrfpz6SC4NozRDBKczcqpjZUrtX54Mit1YLaM/8lsI5rKNvlFBySwleE3gscVgUw740tzIFpSseXr5dKBFkzwsr8wVz7CukmJzKdIacL75sYrzzsBnW4rAoWhbY5c5kS3qt27dK9U0v8ED2M27cOLKt/qtyaudIlz8WAczASQRfwP79gNcRdqRekLpiI1RfPH36JSDWjRYpBocVBIZ9fHW6SG6+AU8cEqyFMHGtzbeOqV3L+bs/XQlQXfOJo6+slNPTzG2h8Mx9H3CzQf6SQRc6tvqlF/i3C3LW3etLDjxHwAOmmlvYW+I9RLDcIc6PsZM7+v1x8kfr5ndX9Xb8yJUEvoOFzDml4s+8nerFzDrs5sx9Wvqu9VC+7KrefYbpuiqfeLcZPtuN5OnsHqJV+8NwpWV3JpQHb5IgNQouob9AxEeE+Cf3X8ZM90VR5Yln9OYKAmeYvM4p9wBcEntesMWRfDv7sh9H6X/swyk2a1VODTuKvNhLVrIY71BB1avZA2uuUo5p4NHgd0+7+sI94Pxj035+6ChoRCUG4OtbZT0gzFIKE4w2DqrodX2uACVXy9TenkXubKlzoKUgHW8YgTaAXCgTSSxqFDEELmUUa0m2qsRqldpdtBjOfTzVU0Yodx3VHWAOFhjYnpO5SU4dZvFPILqJuGqMNXgiE6jotg==
    environmentVariables: {
      }
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: alpine
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.3
    volumes: {
      }
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '1.5'
