applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgA6Dm8gfnUXT4rpwblxgDY2fXjLsLRKHNaPrgojlD6eE6/x/3XMM+4EW1taUREUSQwN+DWqYid6FGFw+IIoqsCY1GsCdVbeQ5vTyUfVQU9HGWYwtDzzh1AMQ9gussv34gcq6kPnXjCjY27kInR/YRiSE94vnFTkxaQNlozfado/tflIhmXzwvD5DIJxhvt+qLwIgtVwW7GJ4hDWd2jFwXQt2DUnHzRrwuciwUIPtxlIxnhIpZsbyWQs5QxkyWj4Eskj9ibu8vmjIuN1I6YXAtWu89i8b43hAu/iyc1SRxJCc/l9ZhnjYQXQCJ5dhaKR+qzkZW+2wwLJqTzbA6K9mYQhta6TwHsy2k4aCKXWItgIfLE+ubkx4rQceYWsVqREWrmLCmb6trt6tv+GrnE4186vQ+jkqaSz7oVnqCxL/fAzi+vQk2KhUY1zhXJAaQyFQa4LDPL4UWGJdCwPmwM0MlEBmfww+8Gsl60FmoqxkcL16Yeos7HKdBgO21fPsNbhGLCH9CXDw23OYfW7/IIwN6Xub8tppFjcWFI6k8wx7IbTxhK/pjt7mK4qLlHyx0ap8y7dPjI+KAOISpSUCmhUjpNXBSJfnFzRX9QC6I1aN2LLoMXlmlZE/LWCUIFfhfr2iixoRDAjo7V6L601DI7JSgEjGJuqAU4oweFkf+Y/ft+GnDLAbwd95IZqWa9K0Vhv9Up1VN8gfAAvnE1teA9T
          smtp-server: AgA+IvGObYhsU4y7CAiyd3YWUdd/A9QhmDU5Ha92Qv6Arz2fa0hOUAeBG5LpqqRxZVr4gBNGksZmioIT/rzk1OVGZGMOfRgg1DfVFvgrHg+xs+U5/yVSy83yAFJKmWjP/LChe6Cn0segY1SG3Sf0FFhe8lI02jeRW1GqyQ4DN/izm8cpvzw3x8x8ExB1nFDP4sZ+qDIbIahGnGZVXrJAWTqla1yZ8k4YIgvpaeQVF+OmA/CXkA/l9ahERanbod1sgFavE5HRO+3uNmhTIsd/soMzwHr5Q0ycGfdxU1H3R92XH50kJtxjJjyGNIVQiiTVddMJyJXwGNbnq8WvMSLzsbyY5aO7G/EcGIXohPK0ltCzHXY/znNsRo6841DH473kNUukE04HKHZqjYKPfgNpwI83bDpnHgD1n4YYhF8W9KBCL5gBniXCOl9+SBeypZMjqVoDB1/ngmKeiErlKA2t2Ekt7l/ZzOKb/K0NWkZZciG956sKqhUxvlOoQwkjtW4TUHc6m0CSNhNXlO4OReWN8CORsO0juXjZITZvr27xJW3Deqyk3+rW7yIS8uBP699Kh+zjunSJTkLAJl5UbfF+5L88u/6uuPIR6OWdxS03QtbkPXdsekqpobqzhIZbaGh0qZim/w8xkCbcAxZO89BzLHBp/O2QlmtKxcBWIzbm59GrP0sV6RB8zm4BBgdS/TWebcZjLWpMuVdCaoxAVODSxgs=
          smtp-username: AgAvXEvaV1uvrMdjmRt8Z6oFJaaVO8Au3RELFtaJ+PTp7oD8r/caMi0/K3fBF9mmmKdlvBrZbVJkWY9oyOesZglBfrqVUors9zSBHovlszP4tYAapUzvNfn7Ngo5Dq1h/9SmjM8SEgbTISdGrQVZZ6anHzeW30Xmylt0BNWliRA+PhpwXitGKl9aAfHrjt9cLyNhCrVuMUFzlXJG3F1nS3U+HXgqnM8a0HFyF4Dm0e22R8WNT3i17JKhLVaBOj355ffz1acs+IjMYuBqc9XiIllyQU2T3qU3ipyC51rGHTNFqsIpELwcTRGJcEgnAICqIQXUUtKAiPxF+5ZXpPJaWTf/3uPaQQC30poQmxvPXpqh9k6CNiuVH//nCmByjH271ciT+9Av8l8vStu5WwG85chawTgoJhp9/hZfHg1cWNKD9cZlrsv9sP0sKHmcs120QSOMSKi5r/sSR2JgAAxMrFrQfSFH6wN0hKZMNN+J/hFo5J8T9a8sy4SNBUFsv/XGgSMKgEvbeOUuf76PoZjlArECjIXxlI/XhD6sROlDNMbZyquX/GcZXz9cqOy3w868ghcXl5qC2xYcnDh3uxjR2BRD54lv4hN2aYRWEJaL1i9M02J2z94PKQO5T0AlTub0FmvslwcyJZkhEZoL4uX/nyMj8ZORY0cid6BDF82vpAUsw4CWZLB5vM5uIqN6vLXCTMCVvuJIkQkiTGG3Pxc=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgDSmxmS+7JD9Gn9ErrYGHV8gU1zDMBA/3HaAkYbA42o98sJbM+rf6QfL+b8Et3cwBHBXiszoNcQkFmJKW/UBwnIPkvuCdBm0oC5eT6FQjDi0290f8aPIc1G+05FB5pMq9PLueakzGRnLksthoPWMuEAyrefFtzD9rZCk2sTfnNsVfuJHfvtNMG8vRX19gHb7u+95Tr13EncnL6BwICVzhUX3O9Ol0gRMBx36KZkyt6Tj7Nq06OxVbjxT2WtWM+jEOnADWd3I2avRr/FdoWcM9mVGhMaairSsI9UmNzvxOe37ypxzq9EUG9IDl6/bPwYGJ5gTwyjgJxAR3zYJ3vdQu2Oh0wgtHsFpLxyfXyrHyBmIAjtZmDXkoR5QU4g32s6SGgeqrh9pT6McabvMEalpVnaiKi6JaHJyuGFiCIq56RdK0tNC2W/p6Y9zwDLhZWAR24O2pkwDSFtvy02n7bM4/76LklgixvpmvfZRMD5YOp6jEbwqrGywY500OJJrrK7QyAWZM7vu1BYUrkEqAn7Zp+nhAkhdLR+EoFxrjZV+LJXaspSHJ8nc0hidqD0IGXNOEQA6fboAPC58oNQ1S+95X7W7EAOVpV9edM2S/wmf/uekryns6fdK9wS5MaHqnlSEWkIzDnAgysvUtwwD1u5dVhDW57wCLdxsfIaYlGKRdb0SKOYaXgMlmispl6S4XrdXkD6mBtlI9qOcUAVWdkhln7uTX+izEsbnnI5BqWdsbSeAsBZZpKU1AuA6c05MR/ggz7muQjh9vg6mbp6H/pl2E1nhIsTy+FV51oTbTO3h0zrCZf6ciCfhVio7VbdCDtVh6HihcLw+/UjEIWljNO85dnRlrleIA==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: 2.2 RC
