applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgBaxaL5szKZEp/Du6r2aA1rCWOMM6clSkQ6YOmhBGPJMzQ8NjcrHC2G6/cZoUdRdsnSTzWuYGeJht0OnhhnYNiO1YU7wQkvnqSNPzqeKXMr6j+OFqo9OPNKEpdSH28TNfK0ldautmLS7oZHuE7wu6i2iJvyAYngQYm7Uskt7dEGDBETpHzYlhVETCJmbmsxaAYGRww3SZguwJwS9Jr7OJdj/3LzIB6eM/VsWCi8pU25JsotZSibh2q+E84Rubs4sSHHwY52lUxyany0+Jccoc1DMPppPkq5iVCsjGIykr51LE8cLhixiLCTmZ1LwEgTRZshy55luTz7fxEl5hKXOGMBFvdnNUHaOKCeCXcTdoFqNx/GfIu8ptj54bHh54zpE3RbpP8pxMJDmplKBywqR7tRimUN/qrMLd9yf6VoiNuAJu7Feaz1LgyRUM/CnpfjH3C9GL8szevnwCv4osQP7k+PMcgrsd8Idi5SvBijhHWlQUqVcdb68QTi6G+nMSLzBXYt7augPOX3SkqtQX732HQ/8MT0PzRlCGobw2be8Nj49dl6HIxpPDSL8KEDEJ4EcR57529bCd/4fZt3N/DndIhn0kEof02EcZpy2fCdjzvdm4Fbg7wxTaGnvHkbvtW/NNVComllRoPdXmO2VPWqmqEyXtKr26jUoX5mR7GqfhfBgAbOrjBHsQiGkPJptpRzjK00krCKDGrD45NmAD1W
          smtp-server: AgBxqCnktw0JflSSbKZocDe07wl/S/EN9qC1xo/YkCZTXKuDvjIPNotlQtewy0d5OaWkvlSWkBpt146DUQYFMvkb8H6McwF96WAT60Li8zLd3jUtsMg2iVVeyUZkY3cV3PwyItz7KsfZBj1iKmcHShNZHvXV3q5SbVSexdAV8QonLFtzVgyANhbwlL863WrGn0BiIjxMjp1149et4+oTNFpYMWYKlzy4tXB+Mw/G5K0lUfD7v0iqKQkKCMFQ4OYA1u9bPWMKtTMcqj7e875bKASwOdEd2+CsWN0zSKGee7QEtu7CvfNCQBtFlosUroU+o2isK2hP30LXdFe3CSK1GiM6GEpWZRRH06Lxdba6elvdqr1ng3+QmBoFv57UihB6HSlAAMwMLPznPtltSmT2Ca0IfsJuENgTssq1laYrMnPpdGf4i0ZTlXxOq6gMScIgtTp6RhpRlnq+txGUtEq8ECH/4AGheFHFl2hud4kkVX9axQz9eR0Ux2Y8GwVZcQG203snZuPZ4520V+qLvgNoE+o/0SQsX2vIXARvujfHLpbvdpP3gWZtkUedk+13ww4lxhjcEgyU3nlXpOzvwFL/Snc7VaQHNcE+PRqQBiQTUnTpQC7AkUyViSTqJwLn1dj9vXZoS2VC0lMVdY2T4b/ou0GsE0YRM47MYv460QW72Wu4aHIfpgTUxkTqoe3Dv7ypclHGKWkleGx3BNu8U47uvOw=
          smtp-username: AgAv6FwBMAW0gNrW+Y2wnEpOj+1tLpwoaLpW0pEPwrkIkk34KvbYsVt7DWIjTicTkANQ/tNI7d8xeoBgFK91APZVdB594Hq7vn/b8gqFN1be7iS/HkNQhNbjqxvLey1DYdftnGzcLL2aseG5BlVfju8nwsHsMkYAgjywnp4Q6dP2B+eKOjcsRfdWUr8ay3Tk88omqWjNQkGVaEUEyLYn0UDQpZiHGANITDMwDPJolQ6ODpjV+zgEY6SaCMeuvQIkCjnm0TUoZPsaOseN2KTyLJG+Hk0O9yZOwUEo3aUivTueYzxtDoXhIYHPazewR6vG2yWmfB273rye0es4Yr4Bh/ZSChqdmfBPx5r3NTWrtwRq1d5kW60m+lholnStowCYNKG7cyTQMVcHacvThDfQy2/0Oo0uN/nc3ww4ouGzj32y1mkXe39ZLZzNxTCqJUG15RbGddTXHYVkUqF/Lf+zRflmgtF5EUljfD70PbgyOA+/3MsE6EN8Bm654p2P32Qeu+CfeNSqanUngm61TOoskOSmWLIQbyq7zJVw1Oa7CM6GYBRmd0wQGIZ2c0klvw2/dXf4F564LEqLkO1UAw0h8Xyoeepd1FEibOVw8Sul30fozvVXFYeaLn6VRhQTNVbKdPhou1MVzn3cRFWQSf08ec3iXS8sRjeejy22m75CLrV7sLjmUVgav9WgpLM6zxpQ2fLJ0hgC9XkpxdZMNfw=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgAA7kA97zNy8topTO0ynwztBsxBKId5Jey2n36gLB6v0ZOPSQBiJ1N/Jd0Zv5vRrmXPCelhLhnfZLB/bCnimABYubz7GC3VkwIh/sRTTw75zDlFRalahmOp0YsTiKO9T7Q7wrH4yOv4nKL2HRZawoQT224W+y+MByi04YjMeenX942mcnnMHqcFLQvZfe0Xaq2Rpvr5XKMx2sHxJ/7cptLVBIb7A8MCgGTtd9icfcrAM76RY5SI6ms/fjdk+cKZxT0ahhxRMpDQvJfXaI1ub7PkF8lb3EaLilInfxnS9fkBZ7Ut1rq9zMXk2YrYPSKVULCIr+FeLziDZWWjTSGU+rZbG/3Gz8kRu43Q9VxPH1+r9e20g6fLRS7vdc888M4soCFtkmkTqTmTPwSdyvm3rVAqODW3850tFh0fGs9xpzZpkWCB69m30bzMHNUYPSLkwrPp93KKlqVbIDEArYITE9iFY1Qc2rasSuVjcHqaRtm1DhSbDb0NZy5I5L79UNczkEt2Dggxn++1FJzqKWTr8KHS0cflacnukBgm7Ih8Mtt6GDblOMr/9+HztI/sVDPwH3/Q+/e0AWlG2/gwj5vB0xjwKWVb33mkpDhnT0199UrnIkqgYmlbVf4RwSZC2M8sAq2iDeytGuYcFSWH4BdupewuBr0/SU5Za4Ja9jrlEDbuN/eILbs9ZdzZ47roTtuujKZ60+GMiD8zEemEWIQw4t0Hzhwb/WAhDPW11KjRUFo046iAQGsIRRNvnMm/2gizeAIjn3c15tUOHvLw9DYYnOJYVzLBiqkedh2Q+4aUxipGeSEckYmQEjMUaWAFslbucnk5o2tJyj8MevYMhc+I4T30SUs/ww==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.3'
