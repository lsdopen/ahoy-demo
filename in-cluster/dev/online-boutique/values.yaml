applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgAnmX/XtdbFVrMFs7VUP+Ecs2U37NYRGyvW/T2FiWf0k8UFuvSocQFq8JagknIKEL5m58JjjP/3YOFiw8GIhWpx4VaSs8qcf4MscKKHw1IHagJW7NLg0WNv60eEiINoqcAtByH5Ey5ss1c8sl1qfOsfj/bDkc3k/x6wXmbXxLi7Cdokz7h6WWnY67q79R5l0gyL/I+kemEODTcbL6gTnvZQx48aNeQm9M7rSdrL0dp1tPgAvW1L+oQ6T/raZQTBdzNJ3ZcZlNMiZxuhkcX54a3bOGe3braNbquITYkt4rgL5Xyjra3BVZHO9Rged9OkmsrptGYwZ6T2xTsZX0wTlT+PxJ5G46qOTvZTkKnGZjJMqtn9QC1HyntHUizF6qJmKkfJ1HCo3paBueYuuSk2G1L6wEFGt/PtRZVBWozzI/SOcuSjcZVEF2pZz9KqD/NJ75J+7pAgkH0gPOlwHxIb8fdJxLSQ/Rmuvq9RegLwWSsro3oBgWnbzbCq/oGTyEod2GdZ/IMqDw8bbHH9LfCAeCZNbvZMzykILgBS8YiGxXsRhfnjkGz3s1XTcH4niVfbs7E3hlw9m1mNfCieVFSeuRB7soccZVg/O9xdB5BR5ZCoAqH3f2oKbjW3dx/hs5AKxsQPgfp/w03G+77yI2dlZQNczfHyw+emQD0TGiiwtsaSja85MeQDoOJUGY8NTlQd4zSY+NQN6uUglLa23Zp+
          smtp-server: AgBItLyxvkh6LXCMvtb4VxLg1n33mDHu6VS4t/PG9bDp/wnY33VnX46vK/FhdQy48ext/uZg7HV9Xu9ITEkTjXvg/OeaGsX0PduDtSFCj9+fU6xEWgdsJ7my6SeNBkilaWsyKrcOda8fWqQcbRapqdLrm9azUSv/cNku1NuRWVdr1AkIVOeHp4zLtBmqS608R1NL9hwAgZP3JJ0G4Is2cvbm05N+B5aJD1PHxcW7UEQeHIPfMq9E2RGg0VEQi6VxE41v4oCQnYVc5sZ2ShTemcodVnstanryyhOADx3DqsCnKduWcbTvdYsKUu13Hn0qa3O4rLZIGPlK/MslAp3/iIawc1KrvyGozOPia34t6Ldw96S/0bRY0jiyWzHs956Ibv6wq3vljA5DXQ/F1QgITwlgEps4TIeTl6gjytbE0iRRUvbKrMBJmsOYgiq71/YWeKykggEUF9gAwD9tKRjcSXn0MOCcqW2eODq7KkQL4rTvWOKEGherHkD+Wo1NWttaYhitY3OvtRS/kgl8/iEhsaO4O/VuJZCQJrQUD6jMYA5t43j1QP6E5mfnGaFSKaelKDDjTx0CQF8q6zdvmka41dRC3xIlCUypwhEGQLr4xnODMvKNtZ51aDcish+layxk9apa6Qy+5Y0OsynJDnYh7jvxuDiDKbUhA4i5+0VcL+vOx0xsH/FB4n4EMiIx0ODS9sHjYqqz5rzh6zDYRMx+tOA=
          smtp-username: AgA+4TVz+nDUc3A46ltlhyXMSidxpX7p/eiOcPPWLuci4p3XrufLidhrePptxLmnvKSGtSJ8Bd2rNbBcDOXdzNwUiln5Tw1NF0QAvZyNjBaf7uvqtrtJoK2k+YVATR9NAn76rk05B0lV7PJI9AWwqa3YH+9aKubzronRc+bZL2yIanKroH9YmMpoiDr4ncLj+PLkJPyyfnlzZU/Ztcy1zAK+az04qXulICDOpb0dbDrXKTlO1+zTsXYTXw/JFqPdbrPot93upGpKkG7mj/Rr60h7qvwIf002fW4yc4RRfGQDynaoeSSr1SsypTBzdXX5beXOainbGEwS7VXr9DVc4KM+74ziV2C6eenau5M4JJ81ADWX7VZsVwEuQspFAr2R+9py2ZkTl980nEmZRPfkBDpgObEhVPYAaswal97kCQO7oh5HYLYpRwEKW1E7+GrOhWeuyLAoe1Caseg8u5H6CbCTgNlP6ajQoq6/CncH8qlftQReUapALC+2ZycRne7swfD5+5j30M+6exGdygJ/jkdzKC9yCEgRD0gKZYtGYtodh23waO2wESlACH7tpeomVcH1ijrdlVMwVRk/X2ugIcYT3BSOa/QbW4C1GK9e1ZpXmfosGJAs5o+TrQyossVGhtXpt1kP2hB+Ms7phxu7BPY81+4rtB+eEdN/6Im1XM+CrSfHnfCrUugeGf9EIq7v/Q58J5pT2VG4gBuWOt4=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgCHsUrM0WNqOfB4Snw6MlT6gVAMFWI9OlA5ItzikaKSQezuvM+Pe1nDTxHaI4F+hxqqFmTrjBHd7KaMqazHr44wMiWojRIk91/rwcfNPL581X6Zl24/T9AjuAJJY1jvHh8tzSQRRtthhFp/aGswwLUi5ok34RJcZnBr7sg76JW8zpKcpe6yUaLQp4ify2lD/4o946y86cl1Oxymizah6JV1QLtQc0beWBAWrDIVHdYuOmRhRvCyGxcos9Ab5H2XrVwUIV4zeV54SKWpQPKafiRToC/43DkzjvOT1VkYMrjYgwi4bdiWvnTmXtvkCrz2ms7tE/BHPWfDIri+4lSTG2deZ64x91EUi3f61VNG3zqNghcDZL8orm49ySqA4CXcn3JINOwZKKcC5KyvqNnO2pzxw4qYoyS+JIlIDqXwG/O3haoWyXlRqVO7rJxrcsPadBwxVZemPzdaoM1Xz2LnAvZuluS0HGFVmFuaq7ffBPoDX7gK7Hjw3SUtXAJs3EoGcGPFKMwno6hi9RFp2Vdg+6BlegL5K6LxeY0c9iUek+LYdpsSdvqmLgNdIeD9FysouepaiG9EViRc479KFb5RoZhqZeaRY/Tx7gONSYvLaNnhz397E15b6oznW5t/0kkyGue2tjX/UAP+YhDxMNG1kLI2fWZbGpsnf3P1HdHYTnmZHMx7vg+7v1wOw04WpFJ+65pAf0N+BDeB3dhlepbL/r8Kw6Jk+bqeoN3iVt1xeWTE/yL/9OTJQxlduUFcAliOCUUBKwLMKYemddIolag/odSJe/DxfG4onT/L4FAP3ggrIruF/K2heV2h/wTNut4mgeMaTD5O8Zp4GMdGm3kNPSqeyuevjQ==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.0'
