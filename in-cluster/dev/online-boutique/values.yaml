applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoloadgenerator:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.3
    name: microservices-demo-loadgenerator
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables: {
      }
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgBH2s6bBnQBLRIBD9Iw1eUxMPFJWsebcyY4VXwGlZWSwhuoe7knu/AFm80FLX6VwZD20KuUZhVm4wr26qje07Z2uBieuHLGgDZEvu4bJ/VJcWJwt4TFb/Uv3RIe3duAtFPLQ9tUZPZ7Emq6CW0FSbidKzX5T72pSu+r1Dfotk1z0vUAmRBvzh9vH3DZrQlW6not1tAguYkY2cRpCsgQNbDda5wsFBQgRWIcvAP29KUkmeqDVFVWmA1ypGDy2T5fOoUh1emDIUuY/NbEmj9Vrjntjiw4K+faLOMhldvkjoXuI37idr+2YOy+skp5JzzmCD0iJwCuVen0Qfetf7y/csU7YhQHmvMq9AnvZs+tLPjW9Yg4zltfg+ZUTK0Pjgtmp6peIOIU1u70McW/6ZwSf9TY96wqCvNEZ9CnWmBVIKvP59x5c5f+9JGa5lmB3Sf51JSLPOHKlgnDFUp1heWXg/fSjNkOp5OBBWCa8AhRzQ55w9WZ59zYc6Bms7rzXl/lgXAyRsAk01YTj7DEn7oKw4AgVs6GrglIAU21vku+PdOfABNCsEv0PAOEx9JL9ywUajxwnacoiRqBKh/2ug4xn8VHytYmUyOWhwgBNB+AnHovl6ylk9PPImsba8kKm1lEkLDiTbAeNW0p3QrCLcJrlqaMFhzkpBWWQTW+ba20wf7d2xgGjlgI8GuKMNodCl99mA3o1ePqOW1M9kjQ5zlS/t1dat2eH49HTLT5rPLatkq7M1nmV5nwy7neLn1Uq0M5xXCD9yK0eeEolWcFu8IMBrnKbWiEHaoaR8o10Weg+HA+1ddo3us8ICmKNHTdbVvaX4Ax5VEQqe8vdmMk3vrS7/2i3Q2hsg==
    environmentVariables: {
      }
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: alpine
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts: [
      ]
    tls: false
    version: v0.2.3
    volumes: {
      }
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '1.4'
