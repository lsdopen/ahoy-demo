applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgCdD+oeY9Em1oKHy5eX89tQmS3tK9R5eo18Lp4fYrNcqpjssG/9V3DDN4Wv2Ije+3Ub3fgvHHITIK3uUb2JuwmWP62h11Oi2+R8v6VvlfzxeFRzgafAEzhpaMv41eCNzvRZbSto4aYl+zlvvJ1QCGm8iVQo9iT0tdl73u+nIC5KJw3syX4iW65lrLc3Z1RuUpWACsNVia7BGkvuzo0NyE7WPQiM44epKl0tbolCpX1ArSjxvPdNADGsZvF0ZZILThe17QRGjam1WmeNFBxI7zOQwoFMbAGPT/yss1Vv5/GpuY7j3hrbrl+PgRZxQ/52vhibyniUi69WgVX64yuXlNhLfWtNP2c8SFEC6GxjGFXiAPJbLyj2AuIG3sdEMTqv/W9CuMbHvnR8VydpUKuTyWQdgaSkdwHLqMLELO/khD0hPe+mFYAfQoco+V+cTE1mENL0W9v2bOckEj5ODmybI+5uUClhCceRrs+hmaPf1RowVxbdyosYnB7+tOgYGuWtqxWOqPUZQP6ItOEHr9e+tMq9b+DgQnxuWXQqCQFnhYXlXVHWhgx5WeFxmhcNb8OQbQ7B90MsEshCRve8J7zbXaxZ2f13ifjP9Pd8B5BtU+vWaTpQpSKX0DsGyJNYNUv1tX6s6t2fDA42OzUKDS0QpY9sZgZQEiwST1dqfkWi3T8AfeEk82ng0TuV00Ih8V0aHV6mstpiOBpkjOcWEjIN
          smtp-server: AgC6qJeeXEK8/SWDkifQSvFiFRlLkRxZtaJYOtkf3FaHvzOasoKjwXIn8WZ9/k8yh9SieWkBTcJUDMoCefezErmEUQgTH3e8aNSbbq65FR/dZ8Z+o2bAxM8nXix5xU9FxwUd5no13JHfw8j+gC/iUZVvsqgzkkgUHTt051adcYm7TS5+cO6qYxLI7dP9clPa7aUjy5OPJ2sdMBikhPR6OPtpInM4ci0rAijFfo70/0Goh0um0njFtrymsYMgv9If2yAHhKjLy8f/ac0ehcOPw2zPsfNBDZd5GHZR0COfw5mQxio7EdXKA+tf+ixC25n9sEN3fWUYwdFxptTfDG4mZ6lKRyQO0BZmhzI7V/wfDRiEY9XxRaRDBr65S7zuc0o2bdprEdYnilrnTiLr3YhZ8ThbjNSg08ZiYOepCtVBoTQhW7OHsf8ZwXAOJAUZncDaX5aXCRIgYFN76ty33JSQ4FdyBZKMJDNQsPVBpNDDpgl/pCnY739RM0krNDLxeD+93uutdw+HpGDOds6f0ZYWFmTZmrinPHMv9AasZ/NU6xjCV7FxMPUja+eQNA02MLwzGV9p+CO7hLgdDUz8i0/WD8jhBlHJ2cW2+fIvBbDIkEROpTA7EIg4cl7/i8rQTJFF4JvpurDCUYQWKIwMXwCi3m9mRIHQrPXTgdX7gS/HCSBzGPG/Yv4aaWoYZIVvCVf6TE6Ejiw6fpqJ7VES7iEGrf4=
          smtp-username: AgCQQERZ8aLxPSMHtLhpWYws0UzQsvit05dzmlOj4wO50Ek1eZogQIcfq7snSVRFkSdtrc6hOlaSeytWH7yqibJIJw7ctO4BQ8urtX3Gue+YGtL6LVWYvRNsssGZKwnahX2vltgXaiSmi6AWbkL9Pr9q/RVIHNbAv0a/soZSRjvxIBmlfa6pdwNfN19bcdS9+FRZM/fKbmc5KqrlNFUpf2DFt2jA5QieL5uOZe84OwETxJ3VhAdjTA0nAfQZcIDh6e4erit+gRdbs6IQzO5iQT3e5h5t5McMVAYtrwJKtPA1V9WBk7htUaRjmrIFUiZcPsUXu9b0RY2VscEXbArYTRtvNEumf1XzrqVr0k3gr3Sxr36yMXcfFT4ohHM+fK19MdjeIAgWyJm/srUajKqofFkOkC1+SzA1XbyMif270eL+qLommyHTVLRAAL03y8p9S3No4lkkXNHKDAP5g4DB1VoJJ6TPGY6M2ETkbulI7QOI+GGqjdJwGMKovssra5zmGHknvudVAqHI0atGc0fGojdltkFADaKDtyajkFGm+MyCq2XblnDIcsukuTl2UxzmO3NrDaHG9TGMd7Zs3kJXS91qdUVdEws3QUdp6m/BHX6yB4SHsZ8Ra6BBWl46KY0Qan9MOhZ5K8PoJTugdJ8qV5z73SPJEoiFOoSqePM7FUy5Jg59dpetIkmJ/0VamxqeQoJOpiwS1Tdl7UDOy3U=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgCEo18Z8e6DcmXgtYzi1419RXB6VK6LT8YkJ7fySHpCUs0k+fcC6oW0iuajBf2WnO9fGaTGmpLJc0a1xsCAOFBpns11GQMiO0v38veflL6Tlb7wERd6jYvd0u2tUKUozASBVzmOrbTchLNMeMrajh8/SzZUWrCWVTV/VINSgO6FvR68gD5F0agP4m2ixRatiTKYc51jIER8l4NoYvFDc7YT2WqNe6rViJJVK1Mj5nITe8UFo/d6J3xKzaRc25b/PsFCDCoiq9+JJFleKH480elnF+XoUlrbc7ZAYQYvSlOTbjylyQu82K0Q3FaQtSv6LeTKjCT5ogomLy4SIUXAzQ9kJ5NRzy+Ijime9NifxJqqEbrtaYefPpJC8lnDXQDT47gsMRlySy+rgtDiRD/wjbSn4ePj2lL9//nwMhPzWjcZZ2z4vDO1x5EifLFSyBcOrHCW9aWPLJL5dAOHQrXxIiBhMHIXCLu8JfPY9OXGPb98ulU6au2hm3TXjjDQkdJi39PjdJwphwq/v1YPEvIHS8iaYrSnRExlzsoQWVGA8+J6rdjTy3fy4BsXh/j0uw1l5j+yT3Dy9F4Oy9Owm2b9kqCmvq11dO5HVCd9Qv8b0B+nWbXwpGKyw9X7dsFAX8qByiZm3iME5KzntZkFNUq0hJNwkVXbm/6F5wyJKxq89Bx/tCIBNTdedYbbCDsVAworhOdD8bkgPmN4gO+rbuHMafBMh+0mh6JtqXNYQN8Nq5kohRT4k5xM+Q3CGtGObOqj4frVgP9geE6tTpAwvoIpHZ4ruK1FuGFecKPtWpO3271SwiBUjpsUeA4yeNATVVFi9eGnQ8n584AGCSokFXHyjCYMmOmEXw==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.3'
