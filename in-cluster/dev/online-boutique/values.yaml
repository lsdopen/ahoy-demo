applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgBIqMEZbM+VRrt4C5lnuwU2J9oaCgMmpMbGdnkCtzAVzAAYvVlfuRIMK5UcHQq9WLfS9mIRLG9nRh7oV0e8yqPOQvvCckPvLDZsadrOE61FDA1OTjTJDhT1ER6vFL0vAxIdJYLsoQBAoVkz41dksdUUkjkgUmFiQEuj4yYpwHnpHoHq7+Wja5r7RJoi2IBuvkDINB0VXkvB4j6kh+dCYGqHVPdKnNjWMgTAsciN0muonsighWE98sMBJvF1dwsbeCY7hW6whion7ARriccrMEav9czwtdQWD69t3kc2t9YpCMUL9y/RCOt9FCiF9c/zyMlT6E45hEJAhngpQ9v3MEUnY12KKXNxRFFovL6EhIA3EhMW7crMBFBJytoGCYBVQDGEJm6QFaJApl3i81UVYjY9sY5H4B03S3g7i5Mv8/y31dc+epg+TTF6C2vP5Vzd5Cexjz/LNXcQ+Jkfmaqp9J/TJ1TfTrW4LowZV5EzmTxHVBdefuh8ooO0FZgrWAYpsUWp4OamCPRpKWFUzAag1TTLyz8HPsYWtxFur7qertGRvV1RksRi4JIlX5mWY/gUjpdTOufK7yUCThMf0LyrdJZYetNYOReTRIUW2KaBqR90qb7lG2hQwKAJ8AsLmsEvi9ilQUNlUak8ZEdWAQMv10sNWAofu91ZHk6ntblzAVrXmyBcdGCu/ApyjFV2Yzp07R8M5YsNzX27P9kNq+yS
          smtp-server: AgBhudhrL7FznqIgVCgJ4vgU2hACtjG9Kp0b4voj2uPnAzmIEoNBG6vFvZpxshi07HcyL3his5zHoQ0jGNiJxEak3I1AUp2O2DEkYd95JugEJqgnttNPca/so+6D5CCQ6ali26WYNqBhU8SUjcdBQHqid/IjiTh0sI2tWIUm6CmiK59QgMUxj9vLTWDLb5HtpoRVzR1Kwt5iY+QII/xHIKPn3JyS2i68+pDyb8tXM5/+K8ZZAGRKc+rAjsktljiksKG+Ost86iN7jsAgU4ppQogX5glUl5JzOoaJQnf8aQqQ5SM4+SLSrru8+/CtDrRC4HRVD2wYXcNvgqLtA5kjGpo4K+yeHCRUX1+Di3Q6+Gqr+YUHC3j5Eur6bGv+KeguK94lXyiffpTwEBwQc0Sa3NnGMvIr8Wx8iEGXaW5b0x/I40SK0VQ4u+9gNFUwOw7xYGVaAYsXIECTvtpL/X85hlVIqYgAm9TYK/O86iFmbjEOfugGkHv9sN6kOwqnqXOMDSAcBKXR0+KqdN/G35ZWb/NwInNE0luuHEBePY6U3aa9gXyibtmxnh0sAUFGtVwF2LebKccPWyahnEBvFwK6uCmS/S2Vnf1+ZVPV2wEKJFJllb1c3FCd7tqroq+TAh3bo6fpSk9wMNK8TVsgjzuDGM6IPJakIYkN1F3ohCikp+Z3v/DDUm0K+dWB51AkRI/omdesV27dRcH4bnJOiO8gCJ4=
          smtp-username: AgBkDYzf8GcCaw+ZGt+9/XHIoJvG2ZxLHUnnXYTLcRuBeSe9W8PUO2aztJQUdqrF3Ve7LHiADbFoAfohzfrlCB6y7GVliNJWZBxV8La8rnNyPWC9J1tt+OdJuU3+LGh78v3NAzZvffPmEoc2WdFQeeWwt3YuE9xMpKUxtXOBtYEUAaLjx6ZXSulgV0qVi3LriXt6h2q71CHzbIuS9YLjkjfaxrWeL0qbc8ATmzdsEcSne3c4eUtPzkw6aVB4s+Y8vgq3Xfr0/w2TyweD4XrcZTr92e7kai9AUwd7L5q9ljnJGBY50PdyY03BcGjfIvn/B3ISZLd7+Et4D8fN83F3wDhF3i35E9c83wHjKdcui4xvcLh7qtLYORGBWa0CzU4WXg+pU6U1+YG1wUP16gb8PgP68jmbQSttmXJgQVeWhfbncBNvWFa8YYSpdAZiMwKHyKYMuA6c+eKWZVxOz0wwS1fA0ZUgr8/GREhkXZNqW/CWoQ5MN2hj0fPjxTFuRH7cythuN4c+MH8JFV3n3/YSmkHZX7+p9IdwY/+clJI4hw/I4DHMSB8fwdU2t4v4jyVc0gsoCU9vEl8apXgYW0E2oA4S6TsjjBg5gmMgXZ+y7NPgq3A+DeqfDkvc987/4ysXjspi/PaxSZJcNoQWodXyQkGJwumEInOOzl8P3hV1yjWYqebFR1Q9bGzf57ZXnHB+OrHsSDN8EJEzsQAsQjc=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgB+Kxe7atwr/NpJ58s1wZVJyi9cD3xDgWaqJiyKmM6KNUIusHiU+Tsx1pJXqY6q8yu+kFCpeWK3HK2bh3DNdyHZmGpO1Kj/GyemJxmyHdw6qoNLBb9OIt8uA+GeFLkn5yfAm4Y2du1c2F2LE0u+sSuYxZngWOmazVBla0D3qxua08lqcJQ/A3x3aEnqLyvZWYRtQWoxUxXqruFv2+pgr3W3eaTqxCOiBV6cHwQLOC6D5sRsT7PtQkpc3BHSY22AARa+QL3he8lhpyVEmkNBLlY9Kyomo9VE7Rp0X/UsgATkcXH+R0RxE/F4LRQcR5Shgx/ggdGDjXwjEgoHP781KUTwJuB7ZkkMeMKBP0hRu1dXZXkcDHdQw2nvc4pbjrSNgtANsekSRYK5xSkhZiq7cmXKF4rTXajAfLrMTbqniCyEutsGm58Fo974jib91WFl8zt2ypBO5PZi0qk7jDjGvIIvZ8K3TWqCcXHU6SekuO9TFNjbInPwhHZv4czSArX5oyQ1gGCxuurzcihAoF/SEqdZ27Oov+gVHC1bL/lIqBz9ZSJyge/yc1SzxYiyk3skcnM0We/G9JTHV3tPkqKNUtn7KPMcJP51WmQFdpXEqPlVPPEgUEK2CCstLaIHQnx/SLX0l80iGYW4DiQ8v26AjgI5gmPp2YUg2T+v8MWCAw1zt3N+sYgvK3FU2XGoHxjcwv3MfT9vOWGgIhlj/SB8GvQe28s+2VVgtn5fsQmsJ1bN/F/fQTGQv/N5uJNU9Shd8/3EdHOblSHoCe75UUjsJJxb5VP63z6qSF0zpzbB9BwQu7IApj9nwDXhb3pmNMCZod9P8wEHhHlAZyy1VaPU/Uy8reCU2A==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.3'
