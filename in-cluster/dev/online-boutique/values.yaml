applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgAWiPUnJfvzgepqdkqXSVuUx/WgeB2/yO7Bj1BM1k2dR7cjv7nEa90gjH2/be9ik+LispOJP2YUB+j7PjWO/qpO8r4BK8P2FSoIcNJ9/OKx5BRPAfVn9hKILxFzV2x7wDQizkrBPupm7u6RjUK/4YR9DoJ1ThNALYaoB82KgvMm6xHHS+oIvQO5C9yuTeZfV/1oYJdmAz5FHuRw2hUC/VBL3GFfX2tgdSJlX/3dbi65jvwrC45JhBRQJdx5huxMAPLiW6+CDVn8edtOVDYL8dApl7/e1MJXiRCDe18vnNweqJA8m/QSjrFxvZDIQ8vlFN6hJxPzwHlPbuDpygVJUXyxyZ5d0HAxHvN9mW1YW0/5MJwmliiIDr7mt7u/nXBWi7jzNUdNv8BgH1iNLSDrDjKmXBowBJCmxvF1p/jcsSvUxcLgVoF3doIVFCBlorLmxQ76KJ2bMu+A9sw/3cTaNGLlPsTeHuw0Q71X6iLklgfBvQPjc+w7ZG6OPZ9ioSpaP/3mLGTwi3HrkHZc59fyGftWOaKxq+38k35k0HsWC9myWoudWUXjepqBWdsFQ/C23iecXYLV/3cmIptphn0pXqbnB44+CeMRWR3S6vnObgu30ojXH2mrkv9QSlpvJPiClF21w/kXlX7hDkp7zpAt+bl3Erf6TWkhYSdpdX+JuEhzz76bSm9QxcH1zr0/BI/EwDZ3LW7YaGjFEmKqd4pW
          smtp-server: AgCB7n6OEG1OblEkfxu6fsv3/bPonJ7pheYBFlU7lPqG/gaeGI9OxXzFnaQtjcyh8zt4HkwNoRxRk5ya1vPpzkATnFzXsoX5l6Cm6Y3LRzRSFSoA9aVsGEHnsHWjYY0Z5G71Alqj6jVQFwCVqlRk21dvv4ZwivvEQdPKPZhKB6G5LRN165DhpETgbsKuMAVQjQCWSndU8H7KpvJ9k5LQz2Uio9+3ERvlUpM7XW9fL3Ms/KhKWEZTMF8ROmex9Wfw8XeH95c9MonAivEmzv1mY5Z6lIKGXAfRSGNruhwqKIGiVq115UyhoDTcyDo33sM2rBCxz+bXzZgpTr9CLsHvvjqTYS9yiRCfA0SeM7yxRA5ijitn0VHjGrgIRtHMSSsfg6lubu8Dm79eXqY8r6BPLGD79R0l81QA8LMe44tusyd5qTjiHhaqdSufg8eSxKqBnQ8HTBYs5q0fMJtTz012XPeFNYuNWhCM2gS6Ine6CECQXeiFtBMaMuvDHwgL6E9VGHDBvIysh3RZHRdwu459D8BfFclP5EMzc+Cmv/BbZcmN3sYs7WJr/P6Fq3t6p4MMiuo6gxJ7cY+pH6cGgEC6Kjk7329kpnkFVqZARvJfKXRi0eeXwv/BFTLhTOC+mF1YohC6W0OpgXzwE/NkXjtEIIPhsD1hfJdGpAKiBY3JoODptm6G6uT0SsGvoU8e02rlxoYwD/ZP8bZKpPCZqQ/+G0s=
          smtp-username: AgAnhViof+8Dfq9MmasFsPOO9T7lBFJpff3RGF58UHPGnx2Pg3MVmpsONb2f13BjkgYn9VzJLGDAwbBPgFUf5btsnCpbKnqJKOEtvbFkZLVjv9Bz7zG7fdvo3y9pS8zqnh0ljU+KZ49AvB118htLW0KsqgT/hKCfFb4MevjVWDYXhqwV1+Jm7jCGtMnqKL3gCyVATiZMBOhIib6lOUp6Cg7g1D45MJjPPKHFMFLed4HTw1X06rnARH8ehvkhT6laDoemxfb1vNhMAq+Kmzrs4ITsKhtQiW3vSwOpM6ZHEFF1SvUwThejp3I6d6qPCFUuh+7irQXCkC64+cf8TMg8NEFQwTHKeQm7cVUxlPDbv5jdK8QjKK19CbcCKIr7ZlmEXelxutxnDFH/yQQA9aWFJhGmTyPRUuufrITtQd2kIOCupwUXpr93+pui9Vqyk3mFhb0kftj4eLR9n2lewOytyfSVE4ld/9RRTzA+S/eYtwbMEVlU1yIOFVXzKTVBI17T1t/Xb/rkb5YX60V2czDlKiTNt+wlQNKYxn6T/2PA/RQPlFWzyCkyPZb1ZMoojTgAzPTWubWztqpT7rZuBElcK8l/1s3DuThu+LUDLS2nH9I0ksynyAoCxENZe15ttedBJfXHNGiYDC0HXQmnYxd9d4n84+xqejm+A5t413toZqEu/2gbxGu9yQxZ2u+sCGkmQ/b97BY7AlbIfv0Uda8=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgASS+jygwFmCHJeHFhHzQaMxYTJaZPF4vlTmbGWJmrhm11qzgiq7YNFLZU2xrLjGk1RTzKOvM6TB9Aq8oDWeFcE7eT0xOihsvjPS5LqnsotbMAxC6SXXnprQVkRIvaxs9DTEYlANAnJ1PMZIy9oCubh9YHh7b89zFcqarNclq4GfAMpcvOSOZlMuWIuPpdy0PW54UGQdKx4T/yDwuityWPNgTGK4sDdTteuW6HWg4ppelK+fS4qDqaY700u1bc1L1LDkCpPCIdfbUFVmL5CABpQy+tKe55jxQmNpx+ck+IAOYqUTJunATjNss7yvXWbD1Ky2br8+sdZsP4fYZ9oV8nzlDPgJ9txhCTjF0a5oZuABKbI2bOA/jYhdeVhQEHgXxNlIzCS72hbSffdfJb4BrLeFygp9LDw4VLibESZ5mqkrHxfSGfTjZiFU+a1FnLJJKRDftoo8SkQWsZ67PwS0gEfQ+93gSJylGDyU39CZ4QkAtwzSWmoi7vqdzcHNxN3cIXWVpNM8WO44RLYd0GzcOid0tEGuG3qMKtZPTtVzDgkCeFRFq42cQvXBgZq1yGNSnkNYfP46OdoRdw/9Nx4OV4EEi4E9iBWfpEJFCpKq0WEfHx4iwyoVxhbRETK+2R7aWu9OMXlcq5TVtWR8yPkPgWAFIYMDFpRfLm7tAXB3RCJLr8w28F02bJXHDHC8F1UI0CNeBs12zoTeifFFlc3eMrvfadXGt+1JiOBaHBnmG3aBridKL33jc4/5a0A1HmuDIUhbMIYLyXlxX7n4B9+7jQ7xu5FBxtoxHNEvSpw7Yz+xUU87UjKR6NA4VXdn1nKtmBLBBV8qAkRMSNIlpbwcsv7iHBkBg==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.3'
