applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgB0whkHYe2G29te8qXR0qaQIFgDUq3dkjHFxUP4zQnN7EfDFwmZaHEea2lqqB28v9HLs+LGJdLa9+FR2+2+d6433wp2LK5q4SMRJqkoRvbPb/hA3XZE6cGode2N8qexwd6rxXEio1lB/HBsItd8MBq3ZpMcxTXhD8dujqj3B4UaJuRa/YBFhd5039SOKYB2r89d/J/x3uCcQss97uba8AP6vVAWBDdq60mGHZsofhq17VTHsVEsT7/4b8dmvEg3RQ68n8ydwyp9oZZYwfQ0+P/kScgyfhOFm4Zs767J8dCszgQvQOO9WvuLWOz7ZxSf8B5D6Uvpofj2su1vFtsp2MsX7G07apFL13TK+mdlXNMt+o+P2EYo5XCwsPV9Z7wWOTWeM5yiTwMuEbZzQwLAgOrQDch6DGDwEnSQlhfMJCTN+SYakcAl11tyb0gk+JEnTR6sq4Ut6mESL6PtIobY5Y3jnk5fEtX+d5EGzn+TP0zdBdZ0mUPJvQoi3s82avI4igAbsqWX1la/pRE1KN9Qz//reHBTwYMbvkdNmFnXR4iB1Joea6IouhVIHWYGIg6Wog8JQgM4GxRbCa5PDdM5NnZLbBS6QyqG1Ekc+k08EGvNLvJdE8vHBL19C1VGCtYk2cERVyKNAifXsidvfcPhJQYu9NcnGbBzP18lOkI6C3f/wKr0T3pDBhapvcsGcwUwjAT+3f/bV5sKVMtThYz3
          smtp-server: AgCdRuqQnyPqmc/9Yh3h9fC/9Qm/bQ5QLeFoZzUURFv3biper7Cdnu7lIhpXhR4y1icueVmqqj+ApXSbmUNcFeo1re27gw0kjHyqR0nhtpKZIZCIk3qW54x0agUvc02Oe7zf/HVYXoiwEWXCHH+kT2eT2faxJSjoad2UX8GYdJxhdjRD8H1SiYFXl026gvqY2RCas+kijx6UZz6teJLN+roTn3Gioqw0HQXRZvvZ3wYH8IEGk9Y0xCNjW3DTrwNCI73jMTZ/h43Lg6asS62rKvrlsFZCYEsqmmDfbJGRvBPtmeGM+KDVxUTW6TnjPePw1CiBXEJr/V8HCdKEZaDmqlsk+LFn5ut6Zf1vKlPG2JvNHFkbw7iIgU4tG/GPwXp/KwV9wUKYU4d6Rz64o8N4MHQLUutdTrRqh2XOh7qVHZBkQRz+YfbvCBskTxjj/kgIpkKbqsCgr0NOY022m4Do7gezFqEwkfLnsFY9e+nnJ9jQ/mZRqrOZVJbt19TMIiFkx0k+wUye72gztI09Py+p6PCpMCNb861F+zp1d95ur0AZE4QHXKcGu8u4z+4lDMVzQLMkrYiKqnufnBmyM3sboUttx10WskWb2nNi/eM0hDPUP/B4xu+yloMSv1wNBMhuPprx6oaHp+Nwpe8CH+4T5OGUIvRkD+82tIOdXiBNqUipZj67dGZhGyDZxmsSAH7fQMwf/OxjwqQoFQsoNz6fGd0=
          smtp-username: AgBk0vNQGNAnILExpQhYunG1Skprk7Bx0Iqm1fRybhNvMjQPbUlMH83eVbHmj6RI5hMkpm5KFr4bywjz8/ywXBxKOzqkT6hQnUQNpO1baELUtpBi75wnT+uFbz8Hb3ExCYUxjV32CzZi/F+OwAIvF5qFHAjUx/OVvwbAAxPKOIUc+bD6yyjE4WCrJq7NoKL2bQAvQsuPvb0Xz+ielqhqNK7AuDLaZIz4VWZgtRH2yicImHwCBXllcsO4WKg5oDvjDm04OsLcrErVCPRb6VTB4dt6WfJp9rj1mCibK4D69GiihkaSPy9P56AC5k8LhElzEeGOWV7zmd8OWCFclLG6BRK0QyFuzrzuzeDBMd5ljlLqqxk6/Ri76Uqh089iANcCOJsCwxIrehYVhcYBb/XeHexjSA8SaYPk5vF0tB1OKtpLU24KW2KO7nhzKAmhE4dl/SDE2Ue56FV6Qbt+U2i+c3CAIteBiADU2Tn5RSYvKDCClCnvypYqnXAYjL3dvVOsdsUhxOtg7P2gUIRWTloee34Tz1uOM2hTWe5DZLUDgq5Kk/Q/sL9p+fUD1uXvgpwddDvk82EuYaP6LkcSbSz812/mBwhgUxL7oDKOnDUFblLa6B53WgsqsEzEgYEgSTxuKn7RB+Ft8sT9U7GQPkm4uLR3+RNVGL03UyvhqeDKRRcdZV0a/EgLCgfs2M2EdboqwVvMsIvvYRBoC8PgG4g=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-dev.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgB+YAP2kfFurDQAR/+MwPRSfFNzPF+2Cw38XJaIaxZbi5hVhm9cDtdSeGXCWh9ks7tR2fW7/d3TK/gbsgKXMb668uJ6b9SXwQq0x8Vqwyy/HIjqH2Q5a+ljWF8uLPg7Xv4Q/pOS1CHNSs3YTsgeR8Ju8sbplk7t3VUKhpgbWXEPM5vUlDcoEBDqRh2Kd8PfMH6M2OqvspfpRHLbS4L3Oafs156ABVIqEKCYJhB6VqEwFVXQuCBiwyk8i1oEkLObVoVCLrWk+5ekieumADO2lame8OG8n8and4ud/f7kr/h33wY2aqQgaPVhbAqxRcVjTXWW2QQlV3EojFCT327LQErv95dO9jNXMg1SPd6vWCutJKknQtE7GE9zkNBa+jYxWHImLJRdM7GKGsLzWvKO4eMYw626+Vj11tsyh83Y2IQ3syRuRGzx/B9OeCnhDei0TLiNMpHWViUbLEMpe+5KXJM4o8X4EYI/RXwXX8BDuBdd6fEhy3iNcomYi8wSzs9vlBkGnASpnmTCU0EmjQj2EMOv7Pc7cAZM+eXFijB7u9g61np0P9BAc/eeodVwDDwHxLQoXJaxdfHlbgdb3hhSsR/TWUV3IQHIGV8VmYCfzvQO9h02zvnWqOYXSnODQeunnSbD3BXCCO/pxF+vJ5U7bxLYYNZnntZI/uaoIriC3+21k0aoH5wzlGqn9VrE9C54kGEemH8LT0BNu85xjrfoLj1Frg0HSxU2JV3HPBg4eO7M1O0zpe190Y8KpBoAKZ8dxqf7eUNmm/li62nk41S5IIvclmI5nnn1Df/xDa60uqgfi+46yJ1bT6uoVdA8HJILA9jwR7ty/xWFOtnxvug5amK9pA1RoA==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: dev
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.0'
