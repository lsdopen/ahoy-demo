applications:
  microservicesdemoemailservice:
    configs: {
      }
    environmentVariables:
      DISABLE_PROFILER:
        key: DISABLE_PROFILER
        type: Value
        value: '1'
      DEBUG:
        key: DEBUG
        type: Value
        value: 'true'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
    name: microservices-demo-emailservice
    replicas: 1
    secrets:
      smtp-details:
        data:
          smtp-password: AgARIR9qK1IBsQxWLZb9jNFu5E36XqZVL8YGi356VmwGuz6imVj2ZBF1CXE345tDjFb07KGBvGDlWzYhGGLYHdmEGp5ct5tNZ7f+Y+33xYyCv2nhR217O3YteZKvnKIeWpCXFYODtnw0jrX41VbneVMZ6ZwW4f8H3QNIG2hlRmGU6j1nmraU4tgF5uBop4GMg4BdhAql4Z1Z44aoF+nIiFeynlhLcDkl8h+fO5FojssE9C8X95CxANjf+OWHEWLBbKopS0cY0tCj2p/eX2viPwVepQrwh+tCZ2j5dZGdCvnVsUikRkdUYze34aZNilRRX2dL4/DIW+k0hCA58agYptN+ijsBYd6NfDqVAKHg3Z6+r6ZAKgEkvxFMFgHbPnRlXtCuoJ9d7WPXnIMynOs2C23p3vpo5MgntPtaw5vNdmqL9QTjD4JijvASfh1Sn9UriA2FuckgSMODqC5HHIVhCwgfIRprdvmdrMXJRcxq5Lep8kWUMBTIO2sCC8SOWFyX3Do05ciYsYn3DZrq2pAxs2mdeOu5xWkC3GOOwTQ4tHKL9+qFdo+RRMLRfh+scsXEPSmMqRaAr+2Y1sMSAKQh1zHFuqausiHmhlH3zfheAkw3zj0tYrmWqgSNj4Nd6iCiRMn05fd3K+XLEkIRJvonvBf79k3jFRAINV7WboBptwm1wZW4INvOQWSCk3zkS8Cc8mJN44c6gcI9nHAWevZD
          smtp-server: AgCwWe66YTeuthZv02RHsYprzCV42nu3IUNM1BMhfaB1j9+Nbplo+7S9zdBcvJn40LJHd6Te0d9W6eBdJgcZr/Q1q3iog3N0+ea2ZbDSZ0qXZYLKBMy93A+E+71s680rytCd+ezJDJlPbh2DcNwMy6n3Wk56mrsbBDZyGQ5Z8dHWrsH16zrrGeZgeZr4eSQJTC9o6/AIsE/nitfHa7DoaNx1h+2nFf0ZvEn7vUkQZlr2emOtey7Bx6gD0fPjpH2tfrUwsUzx79uXqfeIVq/ZITWRWTm4i8ljhiS4ocr5jqOYbJN/KgT/XfV/DB19Bh45tsEIi1KIcgHV79nOf5CaspODnvbZ8iJJgHXU7Ju0PAcn4lob+skbfbS8ZQlsKHp7TOLbCQ3JIiY0hEi1CTydc0C/6ugbqc/V8ovCpZGU6JEiItptlWDMvVKjTSoo8DESorv+15RPBSsJ2rFiuNJtXkNqMalzMCDu4zfRLGU/HmJZldpO6fPX6wTZ2bleqfOPwvOL26D0W/tytVYlVuqV+/6gU8Kp43//VCCTGu/18HX/xdA+HYHQlC9ahojkKrNOsjuvaWzk4qsbrwz7ZMdZ3bpq2RXJ6UV9i2bT8OY5U9SZPLp+spEtcU1K/Vn1fSA54uQ8cMmIFGZkCRwRcd/jfHYmfcKSpVAsrSM/7BnSxkpWBZVonw2g0M5CLslGnXVpFgqg6ItWqea4E+otOcqMhcg=
          smtp-username: AgA7W6JOHHv+fdBJiJoWhm5uPp7zibvO3xYQf0F2B4iSisfJgtcjlqunrL62MKzsQY8tlhR2KLwzD98GyBKYl/BslmU30JiSYnz/mShFXHHZCkJoL1aRz+2l6v00ikocJvWGdPd7ZpzmkpBBgPjwTuZ4AR34Rjl5zmY6CumqmiFKXkL3+zFFKnwtVzCmny/qHV42KFpz49r9UsLq5aQzuP5GR/ZxUu40OSC427g7bflRVWtBPBjpEXhn2N2bSaLG1bAd3rZ5X3c+bj/IYXodTJEjy2WFRKhu7h6MzQ1C6Pv6VSaHm9y8y1pTd5vTXbdYa9DzZTb+LLGm9y0eEFgOm4SrjJqKpErDLzK7OAec6OoFcPJJM+j/iLuTMnygJ2ECDw2yCq7xCKpnODat1UUnp/1EEjtBW6QB9ZoxcR1oEvpw0ijjwSnkvAWR2Tu3FZRKzDuxuYTKL3/26xIRcYjgm0O55StTeZnJQn3LTA5ATYi6hr6q0Eqn39d6lUumcab4aIVF1Ljb9JYCwaIu63tPFKJSq7fpp3qwZ36gsa46ap0lrBbcPpnTgLIUg+JpSTjlorvybNrk+XtdZCLUAx3wywFkOyJ9AClpHcwbZlhyF7R1oZpQfpb/DTfkZDu1ir8I9Y1UMuKkgqNzazvG2DEUGOxOPJvyO8LTyrj/5y28kXObeStHdaHSnoCND6jPqGSoK8OCVIkpfT9QcyazQwY=
        name: smtp-details
        type: Opague
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocheckoutservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '5050'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      PAYMENT_SERVICE_ADDR:
        key: PAYMENT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-paymentservice:50051
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      EMAIL_SERVICE_ADDR:
        key: EMAIL_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-emailservice:8080
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
    name: microservices-demo-checkoutservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 5050
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemorecommendationservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
    name: microservices-demo-recommendationservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemofrontend:
    configs: {
      }
    environmentVariables:
      PRODUCT_CATALOG_SERVICE_ADDR:
        key: PRODUCT_CATALOG_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-productcatalogservice:3550
      CURRENCY_SERVICE_ADDR:
        key: CURRENCY_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-currencyservice:7000
      CART_SERVICE_ADDR:
        key: CART_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-cartservice:7070
      RECOMMENDATION_SERVICE_ADDR:
        key: RECOMMENDATION_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-recommendationservice:8080
      SHIPPING_SERVICE_ADDR:
        key: SHIPPING_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-shippingservice:50051
      CHECKOUT_SERVICE_ADDR:
        key: CHECKOUT_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-checkoutservice:5050
      AD_SERVICE_ADDR:
        key: AD_SERVICE_ADDR
        type: Value
        value: online-boutique-microservices-demo-adservice:9555
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
    name: microservices-demo-frontend
    replicas: 1
    routeHostname: online-boutique-tst.ahoy.cluster-02.lsdopen.io
    routeTargetPort: 8080
    secrets: {
      }
    servicePorts:
    - 8080
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemopaymentservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
    name: microservices-demo-paymentservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoproductcatalogservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '3550'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
    name: microservices-demo-productcatalogservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 3550
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocartservice:
    configs: {
      }
    environmentVariables:
      "REDIS_ADDR\t":
        key: "REDIS_ADDR\t"
        type: Value
        value: online-boutique-redis:6379
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
    name: microservices-demo-cartservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7070
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemocurrencyservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '7000'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
    name: microservices-demo-currencyservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 7000
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoshippingservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '50051'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
    name: microservices-demo-shippingservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 50051
    tls: false
    version: v0.2.5
    volumes: {
      }
  microservicesdemoadservice:
    configs: {
      }
    environmentVariables:
      PORT:
        key: PORT
        type: Value
        value: '9555'
    healthEndpointPath: ''
    healthEndpointScheme: HTTP
    image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
    name: microservices-demo-adservice
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 9555
    tls: false
    version: v0.2.5
    volumes: {
      }
  redis:
    configs: {
      }
    dockerConfigJson: AgCfzZ0Zq7fi1jo8C8Lk1XlPE5NcDVHpC4Q5+V6AjYws1UYL6r/Xrf9PEe3NztJ9xrvusqmpl0bDNi3pPFOKUvItprDODp/HUWmvYU+MiqEvEI6bdI6e07gsTG8yY4vf6ezYgPDQ/c29g4c8XjwK44PrBs9X0aL/fCXxK8pgUdPQpH0OU0sDU1QsWEQhshL3aF5XCfOgvY10NTqbShC1g7+ntSEdkEN9qKuF2W/yowMf/431G5h9mBNHeu35V+R2tPVf34fQat2Dahw78ccxnlAUTblX4MO57INEp+vqL2i0W5rWOCnC96GAVSkKw6yW9g09uK9FVx13aS1f5zr1lhZ9Y+9beB68zzVsFVvpiIYrO5npMmgwILIeo9HLMsr/RvavloMUkwVCApxHiwA/YlcsTSh9+PwaHORcOSLusz+KqJybMuvzMv1IaIDY4+6irg8I33zlV6kq0R5PuZB3XviJc/iQuD6DEkbwUBwwJG9NV3E+2E9f/1sUK1fmWblCeTG4Jh5m0U4t6ujY8G7XY8mbbuLUesOlVDL9YoqLClMPYSGmnYC9OSyxOy89oyMHMauTalbd32potvSxAZaigfFdORu5E8EPnmj9mxIa9LSYhlfVb3xXgVVWJ7BhtZO6XwCPIYxKzy3PP3dbx7vFPyGJgeQIpb4b1PdxdhkLIOEC2P5dLKGhQyXNXCp3lz6qosB68HxSYgTYx5ObLvIbhOwIRdDZ0qAYN67iuHBsaIG/IOPHy9Ak7YyBP3OWg9EK76HXt7089sI51AEa0jvkaAJcLmcEADM1EeQk1CxwcCvLGnblLW75JYRsr/OL4WFenqkrL+3lLTyj0uHcWnLdiGhXy52TqA==
    environmentVariables: {
      }
    healthEndpointScheme: HTTP
    image: docker.io/redis:alpine
    name: redis
    replicas: 1
    secrets: {
      }
    servicePorts:
    - 6379
    tls: false
    version: alpine
    volumes:
      redis-data:
        accessMode: ReadWriteOnce
        mountPath: /data
        name: redis-data
        size: 1Gi
        storageClassName: standard
        type: PersistentVolume
environment: tst
host: ahoy.cluster-02.lsdopen.io
releaseName: online-boutique
releaseVersion: '2.3'
